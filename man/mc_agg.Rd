% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agg.R
\name{mc_agg}
\alias{mc_agg}
\title{Aggregate data by function}
\usage{
mc_agg(
  data,
  fun = NULL,
  period = NULL,
  use_utc = TRUE,
  percentiles = NULL,
  na.rm = TRUE
)
}
\arguments{
\item{data}{cleaned myClim object in Prep-format: output of \code{\link[=mc_prep_clean]{mc_prep_clean()}} or Calc-format as it is allowed to aggregate data multiple times.}

\item{fun}{aggregation function; one of ("min", "max", "mean", "percentile", "sum", "range", "count", "coverage") See details.
Can be single function name, character vector of function names or named list of vector function names.
Named list of functions allows apply specific functions for different sensors e.g. \code{list(TMS_T1=c("max", "min"), TMS_T2="mean", TMS_T3_GDD="sum")}
if NULL records are not aggregated, but converted to Calc-format. See details.}

\item{period}{Time period for aggregation - same as breaks in cut.POSIXt, e.g. ("hour", "day", "month"); if NULL then no aggregation

There is special period "all" returning single value for each sensor based on function applied across all records within the sensor.

Start day of week is Monday.}

\item{use_utc}{default TRUE, if set FALSE forced to use UTC time, instead possibly available time offset
(in locality metadata: tz_offset) local or solar time see (e.g. \code{\link[=mc_prep_solar_tz]{mc_prep_solar_tz()}}, \code{\link[=mc_prep_meta]{mc_prep_meta()}});
Non-UTC time can by used only for period \code{day} and longer.}

\item{percentiles}{vector of percentile numbers; numbers are from range 0-100; each specified percentile number generate new sensor, see details}

\item{na.rm}{parameter for aggregation function; Not used for count and coverage.}
}
\value{
Returns new myClim object in Calc-format see \link{myClim-package} ready for \code{mc_calc} functions family. When fun=NULL, period=NULL
records are not modified but only converted to Calc-format. When fun and period provided then time step is aggregated based on function.
}
\description{
Function has two basic uses:
\itemize{
\item aggregate time step of microclimatic records from fine to coarser with specified function (e. g. 15 min records to daily means);
\item convert myClim object from Prep-format to Calc-format see \link{myClim-package} without records modification, this behavior appears wen fun=NULL, period=NULL.
}
}
\details{
Function returns new myClim object.

Any output of mc_agg is in Calc-format. That means the structure of myClim object is flattened. Hierarchical level of logger is removed (Locality<-Logger<-Sensor<-Record), and all microclimatic records within the sensors are joined directly to the level of locality (Locality<-Sensor<-Record). This is called Calc-format and is only acceptable format for \code{mc_calc} functions family. See \link{myClim-package}.

In case \code{mc_agg} is used only for conversion from Prep-format to Calc-format (fun=NULL, period=NULL) then microclimatic records are not modified.

When fun and period is specified, microclimatic records are aggregated based on function into new period. Aggregated time step is marked by a first time step of selected period i.e. day = c(2022-12-29 00:00, 2022-12-30 00:00...); week = c(2022-12-19 00:00, 2022-12-28 00:00...); month = c(2022-11-01 00:00, 2022-12-01 00:00...); year = c(2021-01-01 00:00, 2022-01-01 00:00...).
When first or last period is incomplete in original data, the incomplete part is deleted, and a warning is shown (e.g. when original data starting on 2021-11-28 00:00 and period = ”month” then incomplete November is deleted and aggregation starts in December).

Empty sensors with no records are excluded. Aggregation functions return NA for empty vector except from count which returns 0.
When aggregation functions are provided as vector or list, than they are applied to all sensors of input myClim object. When named list (names of sensors) of functions is provided then function apply selected functions to selected sensors specified in namend list.
Aggregation function creates new sensors on localities with used aggregation function in its name (sensor_name)_(function) e.g. (TMS_T1_max), after aggregation sensors keep original sensor_id in sensor metadata (e.g. TMS_T1).
\itemize{
\item sensors created with functions \code{min}, \code{max}, \code{mean}, \code{percentile}, \code{sum}, \code{range} keeps identical sensor_id and value_type as original input sensors
\item sensors created with functions \code{count} has sensor_id \code{count} and value_type \code{integer}, function  \code{coverage} has sensor_id \code{coverage} and value_type \code{real}
\item coverage returns the ratio of non NA records/all records
}
}
\examples{
hour_data <- mc_agg(mc_data_example_clean, c("min", "max", "percentile"), "hour", percentiles = 50, na.rm=TRUE)
day_data <- mc_agg(mc_data_example_clean, list(TMS_T1=c("max", "min"), TMS_T2="mean"), "day", na.rm=FALSE)
}
